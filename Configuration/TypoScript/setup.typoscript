plugin.tx_pxaproductmanager {
    view {
        templateRootPaths {
            10 = {$plugin.tx_pxaproductmanager.view.templateRootPath}
        }

        partialRootPaths {
            10 = {$plugin.tx_pxaproductmanager.view.partialRootPath}
        }

        layoutRootPaths {
            10 = {$plugin.tx_pxaproductmanager.view.layoutRootPath}
        }

        renderingStacks {
            productName {
                50 {
                    template = Stacks/Product/Name
                }
            }
            productSku {
                50 {
                    template = Stacks/Product/Sku
                }
            }
            productPrice {
                10 {
                    template = Stacks/Product/PriceCondition
                }
                20 {
                    template = Stacks/Product/PriceDivider
                }
                50 {
                    template = Stacks/Product/Price
                }
            }
            productTeaser {
                50 {
                    template = Stacks/Product/Teaser
                }
            }
            productDescription {
                50 {
                    template = Stacks/Product/Description
                }
            }
            productUspList {
                50 {
                    template = Stacks/Product/UspList
                }
                60 {
                    template = Stacks/Product/UspListItems
                }
            }
            productImages {
                50 {
                    template = Stacks/Product/Images
                }
            }
            productActions {
                50 {
                    template = Stacks/Product/Actions
                }
            }
            productShortcuts {
                50 {
                    template = Stacks/Product/Shortcuts
                }
            }
            productListActions {
                50 {
                    template = Stacks/Product/ListActions
                }
            }
            productAttributeListing {
                50 {
                    template = Stacks/Product/AttributeListing
                }
            }
            productLinks {
                50 {
                    template = Stacks/Product/LinksList
                }
                60 {
                    template = Stacks/Product/LinksListItems
                }
            }
            productHeader {
                50 {
                    template = Stacks/Product/Header
                }
            }
        }
    }

    backend {
        templateRootPaths {
            10 = {$plugin.tx_pxaproductmanager.backend.templateRootPath}
        }

        partialRootPaths {
            10 = {$plugin.tx_pxaproductmanager.backend.partialRootPath}
        }

        layoutRootPaths {
            10 = {$plugin.tx_pxaproductmanager.backend.layoutRootPath}
        }
    }

    persistence {
        storagePid = {$plugin.tx_pxaproductmanager.persistence.storagePid}
        recursive = {$plugin.tx_pxaproductmanager.persistence.recursive}
    }

    features {

    }

    mvc {
        callDefaultActionIfActionCantBeResolved = 1
    }

    settings {
        noImagePath = EXT:pxa_product_manager/Resources/Public/Images/noimage.png

        # Pids
        pids {
            singleViewPid = {$plugin.tx_pxaproductmanager.settings.pids.singleViewPid}
            wishListPid = {$plugin.tx_pxaproductmanager.settings.pids.wishListPid}
        }

        # Seo settings
        seo {
            metaDescriptionMaxLength = {$plugin.tx_pxaproductmanager.settings.seo.metaDescriptionMaxLength}
        }

        # Single view settings
        singleView {
            latestVisitedLimit = {$plugin.tx_pxaproductmanager.settings.singleView.latestVisitedLimit}

            images {
                mainMaxWidth = {$plugin.tx_pxaproductmanager.settings.singleView.images.mainMaxWidth}
                mainMaxHeight = {$plugin.tx_pxaproductmanager.settings.singleView.images.mainMaxHeight}
            }
            related {
                partial = Related
            }
        }

        listView {
            limit = 20

            images {
                maxWidth = {$plugin.tx_pxaproductmanager.settings.listView.images.maxWidth}
                maxHeight = {$plugin.tx_pxaproductmanager.settings.listView.images.maxHeight}
            }
            orderBy {
                10 {
                    key = fe.orderBy.name_asc
                    value = name,asc
                }
                20 {
                    key = fe.orderBy.name_desc
                    value = name,desc
                }
                30 {
                    key = fe.orderBy.tstamp_desc
                    value = tstamp,desc
                }
            }
            # to include properties in list, add field names in list (usp,tax_rate)
            additionalFields =
            # to include attributes in list, add attribute identifiers in list (identifier1,identifier2)
            additionalAttributes =
        }

        wishList {
            limitItems = {$plugin.tx_pxaproductmanager.settings.wishList.limitItems}

            images {
                maxWidth = {$plugin.tx_pxaproductmanager.settings.wishList.images.maxWidth}
                maxHeight = {$plugin.tx_pxaproductmanager.settings.wishList.images.maxHeight}
            }
        }

        email {
            senderName = {$plugin.tx_pxaproductmanager.settings.email.senderName}
            senderEmail = {$plugin.tx_pxaproductmanager.settings.email.senderEmail}
        }

        demand {
            orderByAllowed = name,title,tstamp,crdate,sorting
            allowMappingProperties = offSet,categories,limit,filters,storagePid,orderDirection,orderBy,filters,filterConjunction,hideFilterOptionsNoResult,pageTreeStartingPoint

            objects {
                productDemand =
                categoryDemand =
            }
        }

        price {
            currency = {$plugin.tx_pxaproductmanager.settings.price.currency}
            fractionDigits = {$plugin.tx_pxaproductmanager.settings.price.fractionDigits}
        }

        attributes {
            # Don't compare images and link
            ignoreAttributeTypesInCompareView = 6,7
            dateFormat = {$plugin.tx_pxaproductmanager.settings.attributes.dateFormat}
            divideAttributesBySets = {$plugin.tx_pxaproductmanager.settings.attributes.divideAttributesBySets}
            imageMaxSize = {$plugin.tx_pxaproductmanager.settings.attributes.imageMaxSize}
            types {
                image {
                    maxWidth = {$plugin.tx_pxaproductmanager.settings.attributes.types.image.maxWidth}
                }
            }
        }
    }
}


<INCLUDE_TYPOSCRIPT: source="DIR:EXT:pxa_product_manager/Configuration/TypoScript/Library/" extensions="typoscript">
<INCLUDE_TYPOSCRIPT: source="DIR:EXT:pxa_product_manager/Configuration/TypoScript/Api/" extensions="typoscript">
<INCLUDE_TYPOSCRIPT: source="DIR:EXT:pxa_product_manager/Configuration/TypoScript/TempPluginRenderer/" extensions="typoscript">
<INCLUDE_TYPOSCRIPT: source="DIR:EXT:pxa_product_manager/Configuration/TypoScript/Page/" extensions="typoscript">
<INCLUDE_TYPOSCRIPT: source="DIR:EXT:pxa_product_manager/Configuration/TypoScript/Demander/" extensions="typoscript">

page {
    includeCSS.product_manager_basic = EXT:pxa_product_manager/Resources/Public/Css/product_manager_basic.css
    // Set variable to detect if pm is in "single view" mode.
    // Assumes that page.10 is used as FLUIDTEMPLATE, default in e.g. bootstrap_package and t3kit
    10.variables.product_single_view = TEXT
    10.variables.product_single_view {
        value = 0
    }
}

[traverse(request.getQueryParams(), 'tx_pxaproductmanager_productshow/product') > 0]
    page.10.variables.product_single_view.value = 1
[END]

[traverse(request.getQueryParams(), 'tx_pxaproductmanager_productrender/product') > 0]
    page.10.variables.product_single_view.value = 1
[END]
